repeat task.wait() until game:IsLoaded()

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local player = Players.LocalPlayer

local emojiMap = {
    ["A"] = "😀", ["B"] = "😃", ["C"] = "😄", ["D"] = "😁", ["E"] = "😅",
    ["F"] = "😆", ["G"] = "😉", ["H"] = "😊", ["I"] = "😋", ["J"] = "😎",
    ["K"] = "😍", ["L"] = "😘", ["M"] = "🥰", ["N"] = "😗", ["O"] = "😙",
    ["P"] = "😚", ["Q"] = "🙂", ["R"] = "🤗", ["S"] = "🤩", ["T"] = "🥳",
    ["U"] = "😏", ["V"] = "😌", ["W"] = "🥺", ["X"] = "😔", ["Y"] = "😪",
    ["Z"] = "🤤",
    
    ["a"] = "😴", ["b"] = "😷", ["c"] = "🤒", ["d"] = "🤕", ["e"] = "🤢",
    ["f"] = "🤮", ["g"] = "🤧", ["h"] = "🥵", ["i"] = "🥶", ["j"] = "😱",
    ["k"] = "😨", ["l"] = "😰", ["m"] = "😥", ["n"] = "😓", ["o"] = "😯",
    ["p"] = "😦", ["q"] = "😧", ["r"] = "😮", ["s"] = "😲", ["t"] = "🥱",
    ["u"] = "😤", ["v"] = "😠", ["w"] = "😡", ["x"] = "🤬", ["y"] = "😈",
    ["z"] = "👿",
    
    ["1"] = "🎃", ["2"] = "🤡", ["3"] = "👻", ["4"] = "👽", ["5"] = "👾",
    ["6"] = "🤖", ["7"] = "💩", ["8"] = "😺", ["9"] = "😸", ["0"] = "😹",
    
    ["!"] = "😻", ["?"] = "😼", ["."] = "😽", [","] = "😾", [" "] = "🌟",
    ["@"] = "⭐", ["#"] = "✨", ["$"] = "💫", ["%"] = "⚡", ["&"] = "🔥",
    ["*"] = "🌈", ["("] = "☀️", [")"] = "🌙", ["-"] = "⚔️", ["+"] = "🛡️",
    ["="] = "🔮", [":"] = "💎", [";"] = "💰", ['"'] = "💳", ["'"] = "💪"
}

local textToNormal = {}
for text, emoji in pairs(emojiMap) do
    textToNormal[emoji] = text
end

local function loadSavedSize()
    local success, savedData = pcall(function()
        if readfile then
            if isfile("SecretChatSize.txt") then
                return readfile("SecretChatSize.txt")
            end
        end
    end)
    
    if success and savedData then
        local size = savedData:split(",")
        return {
            width = tonumber(size[1]) or 500,
            height = tonumber(size[2]) or 300
        }
    end
    
    return {width = 500, height = 300}
end

local function saveSize(width, height)
    local success, _ = pcall(function()
        if writefile then
            writefile("SecretChatSize.txt", width .. "," .. height)
        end
    end)
end

local savedSize = loadSavedSize()

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "SecretChat"
ScreenGui.ResetOnSpawn = false

if syn and syn.protect_gui then
    syn.protect_gui(ScreenGui)
    ScreenGui.Parent = game.CoreGui
elseif protect_gui then
    protect_gui(ScreenGui)
    ScreenGui.Parent = game.CoreGui
elseif RunService:IsStudio() then
    ScreenGui.Parent = StarterGui
else
    ScreenGui.Parent = player:WaitForChild("PlayerGui")
end

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 15, 15)
MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.Size = UDim2.new(0, 0, 0, 0)
MainFrame.ClipsDescendants = true
MainFrame.Parent = ScreenGui

local BackgroundGradient = Instance.new("UIGradient")
BackgroundGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(35, 20, 20)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(30, 15, 15)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 10, 10))
})
BackgroundGradient.Rotation = 45
BackgroundGradient.Parent = MainFrame

local GlowEffect = Instance.new("ImageLabel")
GlowEffect.BackgroundTransparency = 1
GlowEffect.Position = UDim2.new(0, -50, 0, -50)
GlowEffect.Size = UDim2.new(1, 100, 1, 100)
GlowEffect.ZIndex = 0
GlowEffect.Image = "rbxassetid://4996891970"
GlowEffect.ImageColor3 = Color3.fromRGB(255, 75, 75)
GlowEffect.ImageTransparency = 0.9
GlowEffect.Parent = MainFrame

local HeaderFrame = Instance.new("Frame")
HeaderFrame.BackgroundColor3 = Color3.fromRGB(30, 15, 15)
HeaderFrame.Size = UDim2.new(1, 0, 0, 40)
HeaderFrame.Parent = MainFrame

local HeaderGradient = Instance.new("UIGradient")
HeaderGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 20, 20)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(35, 15, 15))
})
HeaderGradient.Parent = HeaderFrame

local Title = Instance.new("TextLabel")
Title.BackgroundTransparency = 1
Title.Position = UDim2.new(0, 15, 0, 0)
Title.Size = UDim2.new(1, -30, 1, 0)
Title.Font = Enum.Font.SourceSansBold
Title.Text = "Secret Chatting"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 22
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = HeaderFrame

local Credits = Instance.new("TextLabel")
Credits.BackgroundTransparency = 1
Credits.Position = UDim2.new(1, -115, 0, 0)
Credits.Size = UDim2.new(0, 100, 1, 0)
Credits.Font = Enum.Font.SourceSansSemibold
Credits.Text = "by mxx_xx3"
Credits.TextColor3 = Color3.fromRGB(255, 100, 100)
Credits.TextSize = 16
Credits.Parent = HeaderFrame

local MessagesFrame = Instance.new("ScrollingFrame")
MessagesFrame.Position = UDim2.new(0, 15, 0, 55)
MessagesFrame.Size = UDim2.new(1, -30, 1, -110)
MessagesFrame.BackgroundTransparency = 1
MessagesFrame.ScrollBarThickness = 2
MessagesFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 100, 100)
MessagesFrame.Parent = MainFrame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Padding = UDim.new(0, 8)
UIListLayout.Parent = MessagesFrame

local ChatBox = Instance.new("TextBox")
ChatBox.Position = UDim2.new(0, 15, 1, -45)
ChatBox.Size = UDim2.new(1, -30, 0, 35)
ChatBox.BackgroundColor3 = Color3.fromRGB(35, 20, 20)
ChatBox.BackgroundTransparency = 0.3
ChatBox.PlaceholderText = "Type your secret message..."
ChatBox.PlaceholderColor3 = Color3.fromRGB(160, 130, 130)
ChatBox.Text = ""
ChatBox.Font = Enum.Font.SourceSansSemibold
ChatBox.TextColor3 = Color3.fromRGB(255, 255, 255)
ChatBox.TextSize = 16
ChatBox.ClearTextOnFocus = false
ChatBox.Parent = MainFrame

local ResizeHandle = Instance.new("TextButton")
ResizeHandle.Size = UDim2.new(0, 15, 0, 15)
ResizeHandle.Position = UDim2.new(1, -15, 1, -15)
ResizeHandle.BackgroundColor3 = Color3.fromRGB(255, 75, 75)
ResizeHandle.Text = ""
ResizeHandle.Parent = MainFrame

local ResizeGlow = Instance.new("ImageLabel")
ResizeGlow.BackgroundTransparency = 1
ResizeGlow.Position = UDim2.new(-0.5, 0, -0.5, 0)
ResizeGlow.Size = UDim2.new(2, 0, 2, 0)
ResizeGlow.Image = "rbxassetid://4996891970"
ResizeGlow.ImageColor3 = Color3.fromRGB(255, 75, 75)
ResizeGlow.ImageTransparency = 0.5
ResizeGlow.Parent = ResizeHandle

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 10)
MainCorner.Parent = MainFrame

local HeaderCorner = Instance.new("UICorner")
HeaderCorner.CornerRadius = UDim.new(0, 10)
HeaderCorner.Parent = HeaderFrame

local ChatBoxCorner = Instance.new("UICorner")
ChatBoxCorner.CornerRadius = UDim.new(0, 8)
ChatBoxCorner.Parent = ChatBox

local ResizeCorner = Instance.new("UICorner")
ResizeCorner.CornerRadius = UDim.new(0, 4)
ResizeCorner.Parent = ResizeHandle

local MainStroke = Instance.new("UIStroke")
MainStroke.Parent = MainFrame
MainStroke.Color = Color3.fromRGB(255, 75, 75)
MainStroke.Thickness = 1.5
MainStroke.Transparency = 0.8

local ChatBoxStroke = Instance.new("UIStroke")
ChatBoxStroke.Parent = ChatBox
ChatBoxStroke.Color = Color3.fromRGB(255, 75, 75)
ChatBoxStroke.Thickness = 1
ChatBoxStroke.Transparency = 0.8

local function encodeMessage(message)
    local result = ""
    for i = 1, #message do
        local char = message:sub(i, i)
        result = result .. (emojiMap[char] or char)
    end
    return result
end

local function decodeMessage(message)
    local result = ""
    local i = 1
    while i <= #message do
        local found = false
        for emoji, char in pairs(textToNormal) do
            if message:sub(i, i + #emoji - 1) == emoji then
                result = result .. char
                i = i + #emoji
                found = true
                break
            end
        end
        if not found then
            result = result .. message:sub(i, i)
            i = i + 1
        end
    end
    return result
end

local function createMessageLabel(playerName, message)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 0, 45)
    container.BackgroundColor3 = Color3.fromRGB(45, 20, 20)
    container.BackgroundTransparency = 0.7
    
    local messageCorner = Instance.new("UICorner")
    messageCorner.CornerRadius = UDim.new(0, 8)
    messageCorner.Parent = container
    
    local messageStroke = Instance.new("UIStroke")
    messageStroke.Parent = container
    messageStroke.Color = Color3.fromRGB(255, 75, 75)
    messageStroke.Thickness = 1
    messageStroke.Transparency = 0.9
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Position = UDim2.new(0, 12, 0, 5)
    nameLabel.Size = UDim2.new(1, -24, 0, 16)
    nameLabel.Font = Enum.Font.SourceSansBold
    nameLabel.Text = playerName
    nameLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
    nameLabel.TextSize = 15
    nameLabel.TextXAlignment = Enum.TextXAlignment.Left
    nameLabel.BackgroundTransparency = 1
    nameLabel.Parent = container
    
    local messageLabel = Instance.new("TextLabel")
    messageLabel.Position = UDim2.new(0, 12, 0, 23)
    messageLabel.Size = UDim2.new(1, -24, 0, 16)
    messageLabel.Font = Enum.Font.SourceSansSemibold
    messageLabel.Text = message
    messageLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    messageLabel.TextSize = 15
    messageLabel.TextXAlignment = Enum.TextXAlignment.Left
    messageLabel.BackgroundTransparency = 1
    messageLabel.Parent = container
    
    container.Parent = MessagesFrame
    MessagesFrame.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)
    MessagesFrame.CanvasPosition = Vector2.new(0, UIListLayout.AbsoluteContentSize.Y)
end

local function sendChatMessage(message)
    local encodedMessage = encodeMessage(message)
    createMessageLabel(player.Name, message)
    if ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents") and ReplicatedStorage.DefaultChatSystemChatEvents:FindFirstChild("SayMessageRequest") then
        ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(encodedMessage, "All")
    elseif game:GetService("TextChatService") and game:GetService("TextChatService"):FindFirstChild("TextChannels") and game:GetService("TextChatService").TextChannels:FindFirstChild("RBXGeneral") then
        game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync(encodedMessage)
    end
end

ChatBox.FocusLost:Connect(function(enterPressed)
    if enterPressed and ChatBox.Text ~= "" then
        sendChatMessage(ChatBox.Text)
        ChatBox.Text = ""
    end
end)

if ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents") then
    ReplicatedStorage.DefaultChatSystemChatEvents.OnMessageDoneFiltering.OnClientEvent:Connect(function(messageObj)
        if messageObj.FromSpeaker ~= player.Name then
            local decodedMessage = decodeMessage(messageObj.Message)
            if decodedMessage ~= messageObj.Message then
                createMessageLabel(messageObj.FromSpeaker, decodedMessage)
            end
        end
    end)
end

if game:GetService("TextChatService") then
    game:GetService("TextChatService").OnIncomingMessage = function(message)
        if message.TextSource and message.TextSource.UserId ~= player.UserId then
            local decodedMessage = decodeMessage(message.Text)
            if decodedMessage ~= message.Text then
                createMessageLabel(message.TextSource.Name, decodedMessage)
            end
        end
    end
end

local function toggleVisibility()
    if MainFrame.Size == UDim2.new(0, savedSize.width, 0, savedSize.height) then
        TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {Size = UDim2.new(0, 0, 0, 0)}):Play()
    else
        TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Size = UDim2.new(0, savedSize.width, 0, savedSize.height)}):Play()
    end
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.H and UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
        toggleVisibility()
    end
end)

local Dragging, DragInput, DragStart, StartPos = false, nil, nil, nil
local Resizing, ResizeStart, OriginalSize = false, nil, nil

HeaderFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        Dragging = true
        DragStart = input.Position
        StartPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                Dragging = false
            end
        end)
    end
end)

HeaderFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        DragInput = input
    end
end)

ResizeHandle.MouseButton1Down:Connect(function()
    Resizing = true
    ResizeStart = UserInputService:GetMouseLocation()
    OriginalSize = MainFrame.AbsoluteSize
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        if Dragging then
            local Delta = input.Position - DragStart
            TweenService:Create(MainFrame, TweenInfo.new(0.1), {
                Position = UDim2.new(StartPos.X.Scale, StartPos.X.Offset + Delta.X, StartPos.Y.Scale, StartPos.Y.Offset + Delta.Y)
            }):Play()
        elseif Resizing then
            local delta = UserInputService:GetMouseLocation() - ResizeStart
            local newWidth = math.clamp(OriginalSize.X + delta.X, 400, 800)
            local newHeight = math.clamp(OriginalSize.Y + delta.Y, 300, 600)
            
            MainFrame.Size = UDim2.new(0, newWidth, 0, newHeight)
            savedSize.width = newWidth
            savedSize.height = newHeight
            
            saveSize(newWidth, newHeight)
        end
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        Resizing = false
    end
end)

local function updateInterfaceTheme()
    local gradientTween = TweenService:Create(BackgroundGradient, TweenInfo.new(3), {
        Rotation = BackgroundGradient.Rotation + 360
    })
    gradientTween:Play()
    gradientTween.Completed:Connect(function()
        updateInterfaceTheme()
    end)
end

local function updateGlowEffect()
    local glowTween = TweenService:Create(GlowEffect, TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {
        ImageTransparency = 0.7
    })
    
    local glowTween2 = TweenService:Create(GlowEffect, TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {
        ImageTransparency = 0.9
    })
    
    glowTween:Play()
    glowTween.Completed:Connect(function()
        glowTween2:Play()
    end)
    
    glowTween2.Completed:Connect(function()
        updateGlowEffect()
    end)
end

TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Size = UDim2.new(0, savedSize.width, 0, savedSize.height)}):Play()
updateInterfaceTheme()
updateGlowEffect()
